Object ChildCollection {
    // --- Iterable ---

    \iterator {
    test:
        obj := Object()
        col := ChildCollection(obj)
        iter := col iterator
        ?: IndexOutOfBoundsException throw? { iter read }
        ?: IndexOutOfBoundsException throw? { iter read! }
        !: iter read?

        pair := Pair(1, 2)
        pair a := "A"
        pair b := "B"
        col := ChildCollection(pair)
        iter := col iterator
        list := []
        list << iter read!
        list << iter read!
        list << iter read!
        list << iter read!
        ?: IndexOutOfBoundsException throw? { iter read! }
        ?: list contains?(1)
        ?: list contains?(2)
        ?: list contains?("A")
        ?: list contains?("B")
    }

    \size {
    test:
        obj := Object()
        col := ChildCollection(obj)
        ?: col size == 0
        obj a := 1
        ?: col size == 1

        pair := Pair(1, 2)
        col := ChildCollection(pair)
        ?: col size == 2
        pair a := "A"
        pair b := "B"
        ?: col size == 4
    }
test:
    ?: origin == Object
    ?: parent == Object
    ?: is?(Iterable)
}
