Object Text {
    \fork {
    test:
        txt := "Hello"
        ?: txt origin == Text
        new_txt := txt fork
        ?: new_txt origin == txt
        ?: new_txt == "Hello"

        X := Node()
        X a := "a"
        Y := X()
        X a := "b"
        ?: Y a == "b"
        X a uppercase!
        ?: Y a == "B"
        X a := "c"
        ?: Y a == "B"
    }

    \value {
    test:
        ?: Text() value == ""
        ?: "" value == ""
        ?: "Hello" value == "Hello"
        txt := "Hello"
        txt value = "Bye"
        ?: txt == "Bye"
        txt value uppercase!
        ?: txt value == "BYE"
        ?: txt == "BYE"

        X := Node()
        X a := "a"
        Y := X()
        ?: Y a == "a"
        X a value = "b"
        ?: Y a == "b"

        x := Text()
        y := x()
        x value = "Hi"
        ?: y == "Hi"

        !: Text value?
        !: Text() value?
        ?: "" value?
        ?: "hello" value?

        x := Text()
        !: x value?
        y := x()
        !: y value?
        x value = "Hi"
        ?: x value?
        ?: y value?
    }

    \`[]` {
    test:
        txt := "Hello"
        ?: txt[0] == "H"
        ?: txt[1] == "e"
        ?: IndexOutOfBoundsException throw? { txt[5] }
        ?: txt[-1] == "o"
        ?: txt[-2] == "l"
        ?: IndexOutOfBoundsException throw? { txt[-6] }
        ?: txt[0, 0] == ""
        ?: txt[0, 3] == "Hel"
        ?: txt[1, 3] == "ell"
        ?: txt[0, -1] == "Hello"
        ?: txt[0, -2] == "Hell"
        ?: txt[0, -5] == "H"
        ?: txt[0, -6] == ""
        ?: IndexOutOfBoundsException throw? { txt[0, -7] }
        ?: txt[-1, 1] == "o"
        ?: txt[-1, -1] == "o"
    }

    \`+` {
    test:
        ?: "" + "" == ""
        ?: "abc" + "" == "abc"
        ?: "" + "def" == "def"
        ?: "abc" + "def" == "abcdef"
    }

    \`*` {
    test:
        ?: "" * 0 == ""
        ?: "" * 1 == ""
        ?: "" * 2 == ""
        ?: "a" * 0 == ""
        ?: "a" * 1 == "a"
        ?: "a" * 2 == "aa"
        ?: "ab" * 0 == ""
        ?: "ab" * 1 == "ab"
        ?: "ab" * 2 == "abab"
    }

    \uppercase {
    test:
        txt := "Hello"
        ?: txt uppercase == "HELLO"
        ?: txt == "Hello"
        txt uppercase!
        ?: txt == "HELLO"
    }

    \lowercase {
    test:
        txt := "HELLO"
        ?: txt lowercase == "hello"
        ?: txt == "HELLO"
        txt lowercase!
        ?: txt == "hello"
    }

    \capitalize {
    test:
        txt := "hello"
        ?: txt capitalize == "Hello"
        ?: txt == "hello"
        txt capitalize!
        ?: txt == "Hello"
    }

    \contains {
    test:
        txt := "This is a beautiful world!"
        ?: txt contains?("beautiful")
        !: txt contains?("wonderful")
    }

    \count {
    test:
        txt := "This is a beautiful world!"
        ?: txt count("beautiful") == 1
        ?: txt count("wonderful") == 0
        ?: txt count("i") == 3
    }

    \extract_between {
    test:
        txt := "This is a beautiful world!"
        ?: txt extract_between("a ", " world") == "beautiful"
        ?: txt extract_between("", " world") == "This is a beautiful"
        ?: txt extract_between("a ", "") == "beautiful world!"
        ?: txt extract_between("", "") == txt
        ?: txt extract_between("a ", " world")
        !: txt extract_between("yop", "yap")
        ?: txt extract_between!("a ", " world") == "beautiful"
        ?: txt == "This is !"
    }

    \replace {
    test:
        txt := "This is a beautiful world!"
        ?: txt replace("beautiful", "wonderful") == "This is a wonderful world!"
        ?: txt == "This is a beautiful world!"
        ?: txt replace!("beautiful", "wonderful") == "This is a wonderful world!"
        ?: txt == "This is a wonderful world!"
    }

    \iterator {
//    inputs:
//        (reverse: no)
    }

    \size {
    test:
        ?: "" size == 0
        ?: "a" size == 1
        ?: "\r\n" size == 2
    }

    \empty? {
    test:
        ?: "" empty?
        !: "a" empty?
    }

    \`==` {
    inputs:
        (\what)
    test:
        ?: "" == ""
        !: "a" == ""
        ?: "a" != ""
        ?: "a" == "a"
        ?: "a" != "A"
        ?: "abc" == "abc"
        ?: "1" == 1
        ?: "3.14" == 3.14
        ?: "3.14" != 3.15
        ?: 3.14 == "3.14"
        ?: 3.14 != "3.15"
        ?: "true" != true
        ?: "yes" == true
    }

    \`<=>` {
    test:
        ?: ("" <=> "") == 0
        ?: ("abc" <=> "abc") == 0
        ?: "abc" >= "abc"
        ?: "abc" <= "abc"
        ?: ("a" <=> "b") == -1
        ?: "a" < "b"
        ?: ("b" <=> "a") == 1
        ?: "b" > "a"
        ?: ("abc" <=> "def") == -1
        ?: "abc" < "def"
    }
test:
    ?: origin == Object
    ?: parent == Object
    ?: is?(Iterable)

    // interpolating...
    ?: "{}" == ""
    ?: "\{Hi there}" == "\{Hi there}"
    name := "manu"
    age := 38
    ?: "{name capitalize} is {age} years old" == "Manu is 38 years old"
}
