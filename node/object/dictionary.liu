Object Dictionary {
    \fork {
    test:
        dict := Dictionary()
        dict["a"] := 1
        dict["b"] := 2
        dict["c"] := 3
        dict2 := dict fork
        ?: Text(dict2) == "a:1 b:2 c:3"
        dict["b"] = -2
        ?: Text(dict) == "a:1 b:-2 c:3"
        ?: Text(dict2) == "a:1 b:-2 c:3"
        dict2["c"] = -3
        ?: Text(dict2) == "a:1 b:-2 c:-3"
        ?: Text(dict) == "a:1 b:-2 c:3"
    }

    \copy {
    test:
        dict := Dictionary()
        dict["a"] := 1
        dict["b"] := 2
        dict["c"] := 3
        dict2 := dict copy
        ?: Text(dict2) == "a:1 b:2 c:3"
        dict["b"] = -2
        ?: Text(dict) == "a:1 b:-2 c:3"
        ?: Text(dict2) == "a:1 b:2 c:3"
        dict2["c"] = -3
        ?: Text(dict2) == "a:1 b:2 c:-3"
        ?: Text(dict) == "a:1 b:-2 c:3"
    }

    // --- Iterable ---

    \iterator {
    test:
        dict := Dictionary()
        dict["a"] := 1
        dict["b"] := 2
        dict["c"] := 3
        iter := dict iterator
        ?: iter source === dict
        ?: iter read?
        ?: iter read == 1
        ?: iter read! == 1
        ?: iter read! == 2
        ?: iter read! == 3
        ?: IndexOutOfBoundsException throw? { iter read }
        ?: IndexOutOfBoundsException throw? { iter read! }
        !: iter read?
    }

    \contains? {
    test:
        !: Dictionary contains?(7)
        !: Dictionary() contains?(7)
        dict := Dictionary()
        !: dict contains?(7)
        dict["a"] := 3
        !: dict contains?(7)
        dict["b"] := 7
        ?: dict contains?(7)
    }

    \count {
    test:
        ?: Dictionary count(7) == 0
        ?: Dictionary() count(7) == 0
        dict := Dictionary()
        ?: dict count(7) == 0
        dict["a"] := 3
        ?: dict count(3) == 1
        ?: dict count(7) == 0
        dict["b"] := 7
        ?: dict count(7) == 1
        dict["c"] := 3
        ?: dict count(3) == 2
        ?: dict count(7) == 1
        dict["d"] := 7
        ?: dict count(7) == 2
    }

    \size {
    test:
        ?: Dictionary size == 0
        ?: Dictionary() size == 0
        dict := Dictionary()
        dict["a"] := 1
        ?: dict size == 1
        ?: dict() size == 1
        dict["b"] := 2
        ?: dict size == 2
        dict["b"] >>
        ?: dict size == 1
        dict["a"] >>
        ?: dict size == 0
        dict["a"] := 1
        dict["b"] := 2
        ?: dict size == 2
        dict2 := dict()
        ?: dict2 size == 2
        dict2["c"] := 3
        ?: dict2 size == 3
        dict2["c"] >>
        ?: dict2 size == 2
        dict2["b"] = "!"
        dict2["a"] >>
        ?: dict2 size == 1
        dict2["b"] >>
        ?: dict2 size == 0
    }

    \empty? {
    test:
        ?: Dictionary empty?
        ?: Dictionary() empty?
        dict := Dictionary()
        ?: dict empty?
        dict["a"] := 1
        !: dict empty?
        dict["b"] := 2
        !: dict empty?
        dict["a"] >>
        !: dict empty?
        dict["b"] >>
        ?: dict empty?
    }

    \first {
    test:
        dict := Dictionary()
        ?: IndexOutOfBoundsException throw? { dict first }
        !: dict first?
        dict["a"] := 1
        ?: dict first? == 1
        dict["b"] := 2
        dict["c"] := 3
        ?: dict first == 1
    }

    \last {
    test:
        dict := Dictionary()
        ?: IndexOutOfBoundsException throw? { dict last }
        !: dict last?
        dict["a"] := 1
        ?: dict last? == 1
        dict["b"] := 2
        dict["c"] := 3
        ?: dict last == 3
    }

    // --- Collection ---

    \`<<` {
    test:
        dict := Dictionary()
        ?: Text(dict) == ""
        dict << "a"
        ?: Text(dict) == "a"
        dict << "b"
        ?: Text(dict) == "a b"
        dict2 := dict fork
        ?: Text(dict2) == "a b"
        dict2 << "c"
        ?: Text(dict2) == "a b c"
        ?: Text(dict) == "a b"
    }

    \`[]>>` {
    test:
        dict := Dictionary()
        ?: NotFoundException throw? { dict[:"a"] >> }
        !: dict[:"a"]? >>
        dict << "a"
        ?: NotFoundException throw? { dict[:"b"] >> }
        ?: dict[:"a"] >> == "a"
        !: dict[:"a"]? >>
        ?: dict empty?
        dict << "a"
        dict << "a"
        dict << "a"
        ?: Text(dict) == "a a a"
        dict[:"a"] >>
        ?: dict size == 2
        dict[:"a"] >>
        ?: dict size == 1
        dict[:"a"] >>
        ?: dict size == 0
        dict << "a"
        dict << "b"
        ?: Text(dict) == "a b"
        dict2 := dict fork
        dict2 << "c"
        ?: Text(dict2) == "a b c"
        ?: dict2[:"a"] >> == "a"
        ?: Text(dict2) == "b c"
        ?: dict2[:"c"]? >>
        ?: Text(dict2) == "b"
        dict2[:"b"] >>
        ?: dict2 empty?
        ?: Text(dict) == "a b"
    }

    \clear! {
    test:
        dict := Dictionary()
        dict clear!
        ?: dict empty?
        dict << "a"
        dict clear!
        ?: dict empty?
        dict << "a" << "b" << "c"
        ?: dict size == 3
        dict clear!
        ?: dict empty?
        dict << "a" << "b" << "c"
        ?: dict size == 3
        dict2 := dict fork
        ?: Text(dict2) == "a b c"
        dict2 clear!
        ?: dict2 empty?
        ?: dict size == 3
        dict2 << "x"
        ?: dict2 size == 1
        dict2 clear!
        ?: dict2 empty?
    }

    // --- Indexable ---

    \`[]` {
    test:
        dict := [a: "H", b: "e", c: "l", d: "l", e: "o"]
        ?: dict["a"] == "H"
        ?: dict["b"] == "e"
        ?: NotFoundException throw? { dict["f"] }
        !: dict["f"]?
        dict2 := dict fork
        ?: dict2["a"] == "H"
        ?: dict2["e"] == "o"
    }

    \`[]=` {
    test:
        dict := [1: "a", 2: "b", 3: "c", 4: "x", 5: "e", 6: "f"]
        dict[4] = 'd'
        ?: Text(dict) == "1:a 2:b 3:c 4:d 5:e 6:f"
        dict[6] = "!"
        ?: Text(dict) == "1:a 2:b 3:c 4:d 5:e 6:!"
        ?: NotFoundException throw? { dict[7] = 'x' }
        !: dict[7]? = 'x'
        dict2 := dict fork
        ?: Text(dict2) == "1:a 2:b 3:c 4:d 5:e 6:!"
        dict[6] = "F"
        ?: Text(dict2) == "1:a 2:b 3:c 4:d 5:e 6:F"
        dict2[6] = "f"
        ?: Text(dict2) == "1:a 2:b 3:c 4:d 5:e 6:f"
        ?: Text(dict) == "1:a 2:b 3:c 4:d 5:e 6:F"
        dict2[3] = "C"
        dict2[2] = "B"
        dict2[4] = "D"
        ?: Text(dict2) == "1:a 2:B 3:C 4:D 5:e 6:f"
        dict2[3] = "c"
        ?: Text(dict2) == "1:a 2:B 3:c 4:D 5:e 6:f"
    }

    \`[]:=` {
    test:
        dict := Dictionary()
        dict[] := "a"
        ?: dict first == "a"
        dict[1] := "B"
        dict[1] := "b"
        ?: Text(dict) == "a 1:b"
        dict2 := dict fork
        dict2[2] := "c"
        ?: Text(dict2) == "a 1:b 2:c"
        dict2[dict2 index("a")] := "A"
        ?: Text(dict2) == "A 1:b 2:c"
        ?: Text(dict) == "a 1:b"
    }

    \`[]>>` {
    test:
        ?: NotFoundException throw? { Dictionary[1] >> }
        !: Dictionary[1]? >>
        dict := [1: "a", 2: "b", 3: "c", 4: "d", 5: "e", 6: "f"]
        ?: NotFoundException throw? { dict[11] >> }
        !: dict[11]? >>
        ?: dict[6] >> == "f"
        ?: Text(dict) == "1:a 2:b 3:c 4:d 5:e"
        ?: dict[1] >> == "a"
        ?: Text(dict) == "2:b 3:c 4:d 5:e"
        dict2 := dict fork
        ?: dict2[4] >> == "d"
        ?: dict2[5] >> == "e"
        ?: Text(dict2) == "2:b 3:c"
        ?: Text(dict) == "2:b 3:c 4:d 5:e"
        dict3 := dict fork
        dict3[5] >>
        dict3[4] >>
        ?: dict3[2] >> == "b"
        ?: dict3[3] == "c"
        dict4 := dict fork
        dict4[5] >>
        dict4[4] >>
        ?: dict4[3] >> == "c"
        ?: Text(dict4) == "2:b"
        dict5 := [1: "a", 2: "b", 3: "c", 4: "d", 5: "e", 6: "f"]
        dict6 := dict5 fork
        dict6[2] = "B"
        dict6[3] = "C"
        dict6[4] = "D"
        ?: dict6[3] >> == "C"
        ?: Text(dict6) == "1:a 2:B 4:D 5:e 6:f"
    }

    \index {
    test:
        ?: NotFoundException throw? { Dictionary index("x") }
        ?: NotFoundException throw? { Dictionary() index("x") }
        !: Dictionary() index?("x")
        ?: NotFoundException throw? { [1: "a", 2: "b", 3: "c"] index("x") }
        !: [1: "a", 2: "b", 3: "c"] index?("x")
        ?: [1: "x", 2: "b", 3: "c"] index("x") == 1
        ?: [1: "a", 2: "x", 3: "c"] index("x") == 2
        ?: [1: "a", 2: "b", 3: "x"] index("x") == 3
    }
test:
//    ?: origin == Object
//    ?: parent == Object
    ?: is?(Iterable)
    ?: is?(Collection)
    ?: is?(Indexable)
    ?: is?(Insertable)
}
