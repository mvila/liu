Object List {
    \fork {
    test:
        list := List()
        list << "a"
        list << "b"
        list << "c"
        list2 := list fork
        ?: Text(list2) == "a b c"
        list[1] = "B"
        ?: Text(list) == "a B c"
        ?: Text(list2) == "a b c"
        list2[2] = "C"
        ?: Text(list2) == "a b C"
        ?: Text(list) == "a B c"
    }

//    \copy {
//    test:
//        list := List()
//        list << "a"
//        list << "b"
//        list << "c"
//        list2 := list copy
//        ?: Text(list2) == "a b c"
//        list[1] = "B"
//        ?: Text(list) == "a B c"
//        ?: Text(list2) == "a b c"
//        list2[2] = "C"
//        ?: Text(list2) == "a b C"
//        ?: Text(list) == "a B c"
//    }

    // --- Iterable ---

    \iterator {
    test:
        list := List()
        list << "a"
        list << "b"
        list << "c"
        iter := list iterator
        ?: iter source === list
        ?: iter read?
        ?: iter read == 'a'
        ?: iter read! == 'a'
        ?: iter read! == 'b'
        ?: iter read! == 'c'
        ?: IndexOutOfBoundsException throw? { iter read }
        ?: IndexOutOfBoundsException throw? { iter read! }
        !: iter read?
    }

    \contains? {
    test:
        !: List contains?(7)
        !: List() contains?(7)
        list := List()
        !: list contains?(7)
        list << 3
        !: list contains?(7)
        list << 7
        ?: list contains?(7)
    }

    \count {
    test:
        ?: List count(7) == 0
        ?: List() count(7) == 0
        list := List()
        ?: list count(7) == 0
        list << 3
        ?: list count(3) == 1
        ?: list count(7) == 0
        list << 7
        ?: list count(7) == 1
        list << 3
        ?: list count(3) == 2
        ?: list count(7) == 1
        list << 7
        ?: list count(7) == 2
    }

    \size {
    test:
        ?: List size == 0
        ?: List() size == 0
        list := List()
        list << "a"
        ?: list size == 1
        ?: list() size == 1
        list << "b"
        ?: list size == 2
        list[-1] >>
        ?: list size == 1
        list[-1] >>
        ?: list size == 0
        list << "a"
        list << "b"
        ?: list size == 2
        list2 := list()
        ?: list2 size == 2
        list2 << "b"
        ?: list2 size == 3
        list2[-1] >>
        ?: list2 size == 2
        list2[1] = "!"
        list2[0] >>
        ?: list2 size == 1
        list2[0] >>
        ?: list2 size == 0
    }

    \empty? {
    test:
        ?: List empty?
        ?: List() empty?
        list := List()
        ?: list empty?
        list << "a"
        !: list empty?
        list << "a"
        !: list empty?
        list[0] >>
        !: list empty?
        list[0] >>
        ?: list empty?
    }

    \first {
    test:
        list := List()
        ?: IndexOutOfBoundsException throw? { list first }
        !: list first?
        list << "a"
        ?: list first? == "a"
        list << "b"
        list << "c"
        ?: list first == "a"
    }

    \last {
    test:
        list := List()
        ?: IndexOutOfBoundsException throw? { list last }
        !: list last?
        list << "a"
        ?: list last? == "a"
        list << "b"
        list << "c"
        ?: list last == "c"
    }

    // --- Collection ---

    \`<<` {
    test:
        list := List()
        ?: Text(list) == ""
        list << "a"
        ?: Text(list) == "a"
        list << "b"
        ?: Text(list) == "a b"
        list2 := list fork
        ?: Text(list2) == "a b"
        list2 << "c"
        ?: Text(list2) == "a b c"
        ?: Text(list) == "a b"
    }

    \`[]>>` {
    test:
        list := List()
        ?: NotFoundException throw? { list[:"a"] >> }
        !: list[:"a"]? >>
        list << "a"
        ?: NotFoundException throw? { list[:"b"] >> }
        ?: list[:"a"] >> == "a"
        !: list[:"a"]? >>
        ?: list empty?
        list << "a"
        list << "a"
        list << "a"
        ?: Text(list) == "a a a"
        list[:"a"] >>
        ?: list size == 2
        list[:"a"] >>
        ?: list size == 1
        list[:"a"] >>
        ?: list size == 0
        list << "a"
        list << "b"
        ?: Text(list) == "a b"
        list2 := list fork
        list2 << "c"
        ?: Text(list2) == "a b c"
        ?: list2[:"a"] >> == "a"
        ?: Text(list2) == "b c"
        ?: list2[:"c"]? >>
        ?: Text(list2) == "b"
        list2[:"b"] >>
        ?: list2 empty?
        ?: Text(list) == "a b"
    }

    \clear! {
    test:
        list := List()
        list clear!
        ?: list empty?
        list << "a"
        list clear!
        ?: list empty?
        list << "a" << "b" << "c"
        ?: list size == 3
        list clear!
        ?: list empty?
        list << "a" << "b" << "c"
        ?: list size == 3
        list2 := list fork
        ?: Text(list2) == "a b c"
        list2 clear!
        ?: list2 empty?
        ?: list size == 3
        list2 << "x"
        ?: list2 size == 1
        list2 clear!
        ?: list2 empty?
    }

    // --- Indexable ---

    \`[]` {
    test:
        list := ["H", "e", "l", "l", "o"]
        ?: list[0] == "H"
        ?: list[1] == "e"
        ?: IndexOutOfBoundsException throw? { list[5] }
        !: list[5]?
        ?: list[-1] == "o"
        ?: list[-2] == "l"
        ?: IndexOutOfBoundsException throw? { list[-6] }
        list2 := list fork
        ?: list2[0] == "H"
        ?: list2[-1] == "o"

        list3 := ["H", "e", "l", "l", "o"]
        list4 := list3 fork
        list4[0] value = "h"
        ?: list4[0] == "h"
        ?: list3[0] == "H"
    }

    \`[]=` {
    test:
        list := ["a", "b", "c", "x", "e", "f"]
        list[3] = 'd'
        ?: Text(list) == "a b c d e f"
        list[-1] = "!"
        ?: Text(list) == "a b c d e !"
        ?: IndexOutOfBoundsException throw? { list[6] = 'x' }
        !: list[6]? = 'x'
        list2 := list fork
        ?: Text(list2) == "a b c d e !"
        list[-1] = "F"
        ?: Text(list2) == "a b c d e !"
        list2[-1] = "f"
        ?: Text(list2) == "a b c d e f"
        ?: Text(list) == "a b c d e F"
        list2[2] = "C"
        list2[1] = "B" // S[1..2] + S[0] -> S[0..2]
        list2[3] = "D" // S[1..2] + S[3] -> S[1..3]
        ?: Text(list2) == "a B C D e f"
        list2[2] = "c" // S[1..2] + S[1] -> S[1..2]
        ?: Text(list2) == "a B c D e f"
        list2[2] << "x"
        list2[3] << "y"
        ?: Text(list2) == "a B x y c D e f"
        list2[2] = "X" // I[1..2] + S[1] -> I[1..2]
        ?: Text(list2) == "a B X y c D e f"
    }

    \`[]:=` {
    test:
        list := []
        list[] := "a"
        ?: list[0] == "a"
        ?: IndexOutOfBoundsException throw? { list[2] := 'x' }
        !: list[2]? := 'x'
        list[1] := "B"
        list[1] := "b"
        ?: Text(list) == "a b"
        list2 := list fork
        list2[2] := "c"
        ?: Text(list2) == "a b c"
        list2[0] := "A"
        ?: Text(list2) == "A b c"
        ?: Text(list) == "a b"
        ?: IndexOutOfBoundsException throw? { list2[4] := 'x' }
    }

    \`[]>>` {
    test:
        ?: IndexOutOfBoundsException throw? { List[0] >> }
        !: List[0]? >>
        list := ["a", "b", "c", "d", "e", "f"]
        ?: IndexOutOfBoundsException throw? { list[6] >> }
        !: list[6]? >>
        ?: list[-1] >> == "f"
        ?: Text(list) == "a b c d e"
        ?: list[0] >> == "a"
        ?: Text(list) == "b c d e"
        list2 := list fork
        ?: list2[2] >> == "d"
        ?: list2[-1] >> == "e"
        ?: Text(list2) == "b c"
        ?: Text(list) == "b c d e"
        list3 := list fork
        list3[-1] >>
        list3[-1] >>
        ?: list3[0] >> == "b" // R[1..2] + R[0] -> R[0..2]
        ?: list3[0] == "c"
        list4 := list fork
        list4[-1] >>
        list4[-1] >>
        ?: list4[1] >> == "c" // R[1..2] + R[1] -> R[1..3]
        ?: list4[0] == "b"
        list5 := ["a", "b", "c", "d", "e", "f"]
        list6 := list5 fork
        list6[1] = "B"
        list6[2] = "C"
        list6[3] = "D"
        ?: list6[2] >> == "C" // S[1..3] + R[2] -> S[1..1] + R[2..2] + S[3..3]
        ?: Text(list6) == "a B D e f"
    }

    \index {
    test:
        ?: NotFoundException throw? { List index("x") }
        ?: NotFoundException throw? { [] index("x") }
        !: [] index?("x")
        ?: NotFoundException throw? { ["a", "b", "c"] index("x") }
        !: ["a", "b", "c"] index?("x")
        ?: ["x", "b", "c"] index("x") == 0
        ?: ["a", "x", "c"] index("x") == 1
        ?: ["a", "b", "x"] index("x") == 2
    }

    // --- Insertable ---

    \`[]<<` {
    test:
        list := ["a", "b", "c", "d"]
        ?: IndexOutOfBoundsException throw? { list[5] << "*" }
        !: list[5]? << "*"
        list[] << "e"
        ?: Text(list) == "a b c d e"
        list2 := list fork
        list2[1] = "B"
        list2[2] = "C"
        list2[3] = "D"
        list2[1] << "*"
        ?: Text(list2) == "a * B C D e"
        list3 := list fork
        list3[1] = "B"
        list3[2] = "C"
        list3[3] = "D"
        list3[2] << "*" // S[1..3] + I[2] -> S[1] + I[2] + S[2..3]
        ?: Text(list3) == "a B * C D e"
        list4 := list fork
        list4[1] << "x"
        list4[2] << "y"
        list4[1] << "*" // I[1..2] + I[1] -> I[1..3]
        ?: Text(list4) == "a * x y b c d e"
        list5 := list fork
        list5[1] >>
        list5[1] >>
        list5[1] << "*" // R[1..2] + I[1] -> S[1] + R[2]
        ?: Text(list5) == "a * d e"
    }

    // --- List ---

    \sort {
    test:
        list := ["z", "a", "m", "g", "s"]
        ?: Text(list sort) == "a g m s z"
        ?: Text(list) == "z a m g s"
        ?: Text(list sort!) == "a g m s z"
        ?: Text(list) == "a g m s z"
    }
test:
//    ?: origin == Object
//    ?: parent == Object
    ?: is?(Iterable)
    ?: is?(Collection)
    ?: is?(Indexable)
    ?: is?(Insertable)
}
